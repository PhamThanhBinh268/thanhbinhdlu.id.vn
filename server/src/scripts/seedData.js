const mongoose = require("mongoose");
const bcrypt = require("bcryptjs");
require("dotenv").config();

// Import models
const User = require("../models/User");
const Category = require("../models/Category");
const Post = require("../models/Post");
const Transaction = require("../models/Transaction");
const Rating = require("../models/Rating");
const Message = require("../models/Message");

// K·∫øt n·ªëi database
const connectDB = async () => {
  try {
    await mongoose.connect(
      process.env.MONGODB_URI || "mongodb://localhost:27017/oldmarket"
    );
    console.log("‚úÖ K·∫øt n·ªëi MongoDB th√†nh c√¥ng");
  } catch (error) {
    console.error("‚ùå L·ªói k·∫øt n·ªëi MongoDB:", error.message);
    process.exit(1);
  }
};

// D·ªØ li·ªáu m·∫´u
const seedData = async () => {
  try {
    console.log("üßπ X√≥a d·ªØ li·ªáu c≈©...");
    await Promise.all([
      User.deleteMany({}),
      Category.deleteMany({}),
      Post.deleteMany({}),
      Transaction.deleteMany({}),
      Rating.deleteMany({}),
      Message.deleteMany({}),
    ]);

    console.log("üë§ T·∫°o users...");

    // T·∫°o Admin
    const admin = new User({
      hoTen: "Admin System",
      email: "admin@demo.com",
      matKhau: "123456",
      vaiTro: "admin",
      soDienThoai: "0123456789",
      diaChi: "ƒê√† L·∫°t, L√¢m ƒê·ªìng",
    });
    await admin.save();

    // T·∫°o users m·∫´u
    const users = [];
    const userData = [
      {
        hoTen: "Nguy·ªÖn VƒÉn An",
        email: "user1@demo.com",
        matKhau: "123456",
        soDienThoai: "0987654321",
        diaChi: "Qu·∫≠n 1, TP.HCM",
      },
      {
        hoTen: "Tr·∫ßn Th·ªã B√¨nh",
        email: "user2@demo.com",
        matKhau: "123456",
        soDienThoai: "0976543210",
        diaChi: "Qu·∫≠n 3, TP.HCM",
      },
      {
        hoTen: "L√™ Minh C∆∞·ªùng",
        email: "user3@demo.com",
        matKhau: "123456",
        soDienThoai: "0965432109",
        diaChi: "ƒê·ªëng ƒêa, H√† N·ªôi",
      },
      {
        hoTen: "Ph·∫°m Th·ªã Dung",
        email: "user4@demo.com",
        matKhau: "123456",
        soDienThoai: "0954321098",
        diaChi: "C·∫ßu Gi·∫•y, H√† N·ªôi",
      },
      {
        hoTen: "Ho√†ng VƒÉn Em",
        email: "user5@demo.com",
        matKhau: "123456",
        soDienThoai: "0943210987",
        diaChi: "ƒê√† L·∫°t, L√¢m ƒê·ªìng",
      },
    ];

    for (const [idx, data] of userData.entries()) {
      const user = new User({
        ...data,
        // ƒê√°nh d·∫•u m·ªôt v√†i user l√† ng∆∞·ªùi b√°n ƒë√£ x√°c minh ƒë·ªÉ demo badge
        daXacMinhNguoiBan: [0,2].includes(idx),
      });
      await user.save();
      users.push(user);
    }

    console.log("üìÇ T·∫°o categories...");
    const categories = [];
    const categoryData = [
      {
        tenDanhMuc: "ƒêi·ªán tho·∫°i & M√°y t√≠nh b·∫£ng",
        moTa: "ƒêi·ªán tho·∫°i th√¥ng minh, m√°y t√≠nh b·∫£ng c√°c lo·∫°i",
        icon: "fas fa-mobile-alt",
      },
      {
        tenDanhMuc: "Laptop & M√°y t√≠nh",
        moTa: "Laptop, PC, linh ki·ªán m√°y t√≠nh",
        icon: "fas fa-laptop",
      },
      {
        tenDanhMuc: "S√°ch & H·ªçc t·∫≠p",
        moTa: "S√°ch gi√°o khoa, s√°ch tham khao, vƒÉn ph√≤ng ph·∫©m",
        icon: "fas fa-book",
      },
      {
        tenDanhMuc: "ƒê·ªì gia d·ª•ng",
        moTa: "ƒê·ªì d√πng gia ƒë√¨nh, n·ªôi th·∫•t, trang tr√≠",
        icon: "fas fa-home",
      },
      {
        tenDanhMuc: "Th·ªùi trang",
        moTa: "Qu·∫ßn √°o, gi√†y d√©p, ph·ª• ki·ªán th·ªùi trang",
        icon: "fas fa-tshirt",
      },
      {
        tenDanhMuc: "Xe c·ªô",
        moTa: "Xe m√°y, xe ƒë·∫°p, ph·ª• ki·ªán xe",
        icon: "fas fa-motorcycle",
      },
      {
        tenDanhMuc: "ƒê·ªì th·ªÉ thao",
        moTa: "D·ª•ng c·ª• t·∫≠p luy·ªán, ƒë·ªì th·ªÉ thao",
        icon: "fas fa-dumbbell",
      },
      {
        tenDanhMuc: "Kh√°c",
        moTa: "C√°c m·∫∑t h√†ng kh√°c",
        icon: "fas fa-box",
      },
    ];

    for (const data of categoryData) {
      const category = new Category(data);
      await category.save();
      categories.push(category);
    }

    console.log("üìù T·∫°o posts...");
    const posts = [];
    const postData = [
      { // iPhone - th√™m discount & highlight ƒë·ªÉ demo Decorator
        tieuDe: "iPhone 12 Pro Max 128GB c√≤n m·ªõi 95%",
        moTa: "iPhone 12 Pro Max m√†u xanh d∆∞∆°ng, 128GB. M√°y c√≤n r·∫•t m·ªõi, kh√¥ng tr·∫ßy x∆∞·ªõc, pin zin 89%. C√≥ ƒë·∫ßy ƒë·ªß h·ªôp, s·∫°c. L√Ω do b√°n: n√¢ng c·∫•p iPhone 15.",
        gia: 18000000,
        hinhAnh: [
          "https://images.unsplash.com/photo-1592750475338-74b7b21085ab?w=800",
          "https://images.unsplash.com/photo-1511707171634-5f897ff02aa9?w=800",
        ],
        danhMuc: categories[0]._id,
        nguoiDang: users[0]._id,
        diaDiem: "Qu·∫≠n 1, TP.HCM",
        tinhTrang: "nhu-moi",
        trangThai: "approved",
        tags: ["iphone", "apple", "smartphone", "discount-15", "highlight"],
        luotXem: 156,
      },
      { // Dell XPS - th√™m discount
        tieuDe: "Laptop Dell XPS 13 i7 16GB RAM 512GB SSD",
        moTa: "Dell XPS 13 9310, Intel Core i7-1165G7, RAM 16GB, SSD 512GB. Laptop m·ªèng nh·∫π, m√†n h√¨nh 4K touch. C√≤n b·∫£o h√†nh 8 th√°ng. M√°y ch·∫°y m∆∞·ª£t, ph√π h·ª£p vƒÉn ph√≤ng v√† ƒë·ªì h·ªça.",
        gia: 22000000,
        hinhAnh: [
          "https://images.unsplash.com/photo-1496181133206-80ce9b88a853?w=800",
          "https://images.unsplash.com/photo-1541807084-5c52b6b3adef?w=800",
        ],
        danhMuc: categories[1]._id,
        nguoiDang: users[1]._id,
        diaDiem: "Qu·∫≠n 3, TP.HCM",
        tinhTrang: "tot",
        trangThai: "approved",
        tags: ["dell", "laptop", "xps", "discount-20"],
        luotXem: 89,
      },
      { // S√°ch - th√™m featured
        tieuDe: "B·ªô s√°ch gi√°o khoa l·ªõp 12 ƒë·∫ßy ƒë·ªß c√°c m√¥n",
        moTa: "Tr·ªçn b·ªô s√°ch gi√°o khoa l·ªõp 12 m·ªõi nh·∫•t, bao g·ªìm: To√°n, L√Ω, H√≥a, Sinh, VƒÉn, S·ª≠, ƒê·ªãa, Anh. S√°ch c√≤n m·ªõi, √≠t s·ª≠ d·ª•ng, c√≥ g·∫°ch ch√∫ √≠t. Ph√π h·ª£p cho h·ªçc sinh chu·∫©n b·ªã thi THPT.",
        gia: 280000,
        hinhAnh: [
          "https://images.unsplash.com/photo-1481627834876-b7833e8f5570?w=800",
        ],
        danhMuc: categories[2]._id,
        nguoiDang: users[2]._id,
        diaDiem: "ƒê·ªëng ƒêa, H√† N·ªôi",
        tinhTrang: "tot",
        trangThai: "approved",
        tags: ["sach", "giao-khoa", "lop12", "featured"],
        luotXem: 67,
      },
      {
        tieuDe: "T·ªß l·∫°nh Samsung 208L √≠t s·ª≠ d·ª•ng",
        moTa: "T·ªß l·∫°nh Samsung RT20HAR8DSA 208L, 2 c·ª≠a. M√°y m·ªõi mua 1 nƒÉm, √≠t s·ª≠ d·ª•ng do chuy·ªÉn nh√†. L√†m l·∫°nh t·ªët, ti·∫øt ki·ªám ƒëi·ªán, kh√¥ng ·ªìn. C√≥ b·∫£o h√†nh c√≤n 11 th√°ng.",
        gia: 4500000,
        hinhAnh: [
          "https://images.unsplash.com/photo-1571175443880-49e1d25b2bc5?w=800",
        ],
        danhMuc: categories[3]._id,
        nguoiDang: users[3]._id,
        diaDiem: "C·∫ßu Gi·∫•y, H√† N·ªôi",
        tinhTrang: "nhu-moi",
        trangThai: "approved",
        tags: ["tu-lanh", "samsung", "gia-dung"],
        luotXem: 123,
      },
      {
        tieuDe: "√Åo kho√°c jeans Uniqlo size M",
        moTa: "√Åo kho√°c jeans Uniqlo m√†u xanh ƒëen, size M. Ch·∫•t li·ªáu cotton m·ªÅm m·∫°i, form d√°ng ƒë·∫πp. M·∫∑c √≠t l·∫ßn, c√≤n r·∫•t m·ªõi. Ph√π h·ª£p cho m√πa thu ƒë√¥ng.",
        gia: 350000,
        hinhAnh: [
          "https://images.unsplash.com/photo-1544966503-7cc5ac882d5d?w=800",
        ],
        danhMuc: categories[4]._id,
        nguoiDang: users[4]._id,
        diaDiem: "ƒê√† L·∫°t, L√¢m ƒê·ªìng",
        tinhTrang: "nhu-moi",
        trangThai: "approved",
        tags: ["ao-khoac", "jeans", "uniqlo"],
        luotXem: 45,
      },
      {
        tieuDe: "Xe ƒë·∫°p th·ªÉ thao Giant ATX 26 inch",
        moTa: "Xe ƒë·∫°p th·ªÉ thao Giant ATX 26 inch, m√†u ƒëen xanh. Xe c√≤n m·ªõi, ƒë√£ thay phanh ƒëƒ©a, l·ªëp m·ªõi. Ph√π h·ª£p ƒëi l√†m, t·∫≠p th·ªÉ d·ª•c. C√≥ b·∫£o tr√¨ ƒë·ªãnh k·ª≥.",
        gia: 2800000,
        hinhAnh: [
          "https://images.unsplash.com/photo-1544191696-15285ea70b5d?w=800",
        ],
        danhMuc: categories[5]._id,
        nguoiDang: users[0]._id,
        diaDiem: "Qu·∫≠n 1, TP.HCM",
        tinhTrang: "tot",
        trangThai: "approved",
        tags: ["xe-dap", "giant", "the-thao"],
        luotXem: 78,
      },
      {
        tieuDe: "T·∫° tay 5kg m·ªõi kh√¥ng s·ª≠ d·ª•ng",
        moTa: "C·∫∑p t·∫° tay 5kg m·ªói chi·∫øc, m·ªõi nguy√™n h·ªôp ch∆∞a s·ª≠ d·ª•ng. Mua nh·∫ßm n·∫∑ng qu√° kh√¥ng t·∫≠p ƒë∆∞·ª£c. Ph√π h·ª£p cho ng∆∞·ªùi t·∫≠p gym t·∫°i nh√†.",
        gia: 800000,
        hinhAnh: [
          "https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800",
        ],
        danhMuc: categories[6]._id,
        nguoiDang: users[1]._id,
        diaDiem: "Qu·∫≠n 3, TP.HCM",
        tinhTrang: "moi",
        trangThai: "approved",
        tags: ["ta-tay", "gym", "the-thao"],
        luotXem: 34,
      },
      {
        tieuDe: "M√°y pha c√† ph√™ Nespresso Essenza Mini",
        moTa: "M√°y pha c√† ph√™ Nespresso Essenza Mini m√†u ƒë·ªè. M√°y nh·ªè g·ªçn, pha c√† ph√™ ngon. K√®m theo 20 vi√™n c√† ph√™ Nespresso. L√Ω do b√°n: chuy·ªÉn sang d√πng m√°y pha t·ª± ƒë·ªông.",
        gia: 1200000,
        hinhAnh: [
          "https://images.unsplash.com/photo-1495474472287-4d71bcdd2085?w=800",
        ],
        danhMuc: categories[3]._id,
        nguoiDang: users[2]._id,
        diaDiem: "ƒê·ªëng ƒêa, H√† N·ªôi",
        tinhTrang: "tot",
        trangThai: "approved",
        tags: ["ca-phe", "nespresso", "may-pha"],
        luotXem: 91,
      },
    ];

    for (const data of postData) {
      const post = new Post(data);
      await post.save();
      posts.push(post);
    }

    // T·∫°o m·ªôt s·ªë b√†i ƒëƒÉng ch·ªù duy·ªát
    const pendingPosts = [
      {
        tieuDe: "MacBook Air M2 13 inch 2022",
        moTa: "MacBook Air M2 chip, 13 inch, RAM 8GB, SSD 256GB. M√°y c√≤n m·ªõi, s·ª≠ d·ª•ng √≠t. C√≥ ƒë·∫ßy ƒë·ªß h·ªôp ph·ª• ki·ªán.",
        gia: 26000000,
        hinhAnh: [
          "https://images.unsplash.com/photo-1517336714731-489689fd1ca4?w=800",
        ],
        danhMuc: categories[1]._id,
        nguoiDang: users[3]._id,
        diaDiem: "C·∫ßu Gi·∫•y, H√† N·ªôi",
        tinhTrang: "nhu-moi",
        trangThai: "pending",
      },
    ];

    for (const data of pendingPosts) {
      const post = new Post(data);
      await post.save();
    }

    console.log("üí¨ T·∫°o messages...");
    // T·∫°o tin nh·∫Øn m·∫´u
    const messages = [
      {
        nguoiGui: users[1]._id,
        nguoiNhan: users[0]._id,
        noiDung: "Ch√†o b·∫°n, iPhone c√≤n kh√¥ng ·∫°?",
        baiDangLienQuan: posts[0]._id,
      },
      {
        nguoiGui: users[0]._id,
        nguoiNhan: users[1]._id,
        noiDung: "Ch√†o b·∫°n, d·∫° m√°y c√≤n ·∫°. B·∫°n c√≥ quan t√¢m kh√¥ng?",
        baiDangLienQuan: posts[0]._id,
      },
      {
        nguoiGui: users[1]._id,
        nguoiNhan: users[0]._id,
        noiDung:
          "M√°y c√≥ tr·∫ßy x∆∞·ªõc g√¨ kh√¥ng ·∫°? B·∫°n c√≥ th·ªÉ g·∫∑p m·∫∑t xem m√°y ƒë∆∞·ª£c kh√¥ng?",
        baiDangLienQuan: posts[0]._id,
      },
    ];

    for (const data of messages) {
      const message = new Message(data);
      await message.save();
    }

    console.log("üîÑ T·∫°o transactions...");
    // T·∫°o giao d·ªãch m·∫´u
    const transaction1 = new Transaction({
      baiDang: posts[2]._id, // B·ªô s√°ch l·ªõp 12
      nguoiMua: users[3]._id,
      nguoiBan: users[2]._id,
      giaThanhToan: 280000,
      phuongThucThanhToan: "tien-mat",
      diaDiemGiaoDich: "Tr∆∞·ªùng THPT ABC, ƒê·ªëng ƒêa",
      thoiGianGiaoDich: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000), // 7 ng√†y tr∆∞·ªõc
      trangThai: "hoan-thanh",
    });
    await transaction1.save();

    const transaction2 = new Transaction({
      baiDang: posts[4]._id, // √Åo kho√°c jeans
      nguoiMua: users[1]._id,
      nguoiBan: users[4]._id,
      giaThanhToan: 350000,
      phuongThucThanhToan: "chuyen-khoan",
      trangThai: "da-dong-y",
    });
    await transaction2.save();

    console.log("‚≠ê T·∫°o ratings...");
    // T·∫°o ƒë√°nh gi√° m·∫´u
    const rating1 = new Rating({
      tuNguoiDung: users[3]._id, // Ng∆∞·ªùi mua
      denNguoiDung: users[2]._id, // Ng∆∞·ªùi b√°n
      giaoDich: transaction1._id,
      soSao: 5,
      binhLuan: "S√°ch c√≤n m·ªõi, ng∆∞·ªùi b√°n nhi·ªát t√¨nh. Giao h√†ng ƒë√∫ng h·∫πn.",
      loaiDanhGia: "nguoi-ban",
    });
    await rating1.save();

    const rating2 = new Rating({
      tuNguoiDung: users[2]._id, // Ng∆∞·ªùi b√°n
      denNguoiDung: users[3]._id, // Ng∆∞·ªùi mua
      giaoDich: transaction1._id,
      soSao: 5,
      binhLuan: "Ng∆∞·ªùi mua uy t√≠n, thanh to√°n nhanh ch√≥ng.",
      loaiDanhGia: "nguoi-mua",
    });
    await rating2.save();

    // C·∫≠p nh·∫≠t ƒëi·ªÉm uy t√≠n cho users
    await users[2].calculateRating();
    await users[3].calculateRating();

    console.log("‚úÖ Seed data ho√†n th√†nh!");
    console.log(`
üìä Th·ªëng k√™ d·ªØ li·ªáu ƒë√£ t·∫°o:
- Users: ${users.length + 1} (bao g·ªìm 1 admin)
- Categories: ${categories.length}
- Posts: ${posts.length} (approved) + 1 (pending)
- Messages: ${messages.length}
- Transactions: 2
- Ratings: 2

üîë T√†i kho·∫£n demo:
Admin: admin@demo.com / 123456
User 1: user1@demo.com / 123456
User 2: user2@demo.com / 123456
...
    `);
  } catch (error) {
    console.error("‚ùå L·ªói seed data:", error);
  }
};

// Ch·∫°y script
const run = async () => {
  await connectDB();
  await seedData();
  process.exit(0);
};

run();
